AWSTemplateFormatVersion: "2010-09-09"
Description: Create VPC/IGW, public & private subnets, route tables, SG, and a t2.micro EC2

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
    Default: "key-test"

  AmiId:
    Type: AWS::EC2::Image::Id
    Description: AMI for Amazon Linux 2023 (x86_64)
    Default: ami-05206bf8aecfc7ae6

  InstanceType:
    Type: String
    Default: t2.micro

# ────────────────────────────────────────────────────────────
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: cfn-lab-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: cfn-lab-igw

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Subnets ---------------------------------------------------
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/20
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: cfn-lab-public-a

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.128.0/20
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: cfn-lab-private-a

  PublicRTB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: cfn-lab-public-rtb

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRTB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  AssocPublicSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRTB

  PrivateRTB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: cfn-lab-private-rtb

  AssocPrivateSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRTB

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.16.0/20
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: cfn-lab-public-c

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.144.0/20
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: cfn-lab-private-c

  AssocPublicSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRTB

  AssocPrivateSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRTB

  # ──────────────  RDS Subnet  ──────────────
  RdsSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.32.0/25
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: rds-pvt-subnet-1

  RdsSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.33.0/25
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: rds-pvt-subnet-2

  RdsSubnetD:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.32.128/25
      AvailabilityZone: ap-northeast-1d
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: rds-pvt-subnet-3

  RdsRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rds-pvt-rt

  AssocRdsSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RdsSubnetA
      RouteTableId: !Ref RdsRouteTable

  AssocRdsSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RdsSubnetC
      RouteTableId: !Ref RdsRouteTable

  AssocRdsSubnetD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RdsSubnetD
      RouteTableId: !Ref RdsRouteTable

  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "RDS private subnets (3AZ)"
      SubnetIds:
        - !Ref RdsSubnetA
        - !Ref RdsSubnetC
        - !Ref RdsSubnetD
      Tags:
        - Key: Name
          Value: rds-pvt-subnet-group

  # Security Group ------------------------------------------
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, HTTPS, TCP 8080
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:   22
          ToPort:     22
          CidrIp:     217.105.35.85/32 # Allow SSH only from my IP
        - IpProtocol: tcp
          FromPort:   8080
          ToPort:     8080
          CidrIp:     0.0.0.0/0 # Allow HTTP access to Spring Boot app
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: cfn-lab-ec2-sg

  # EC2 Instance -------------------------------------------
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId:      !Ref AmiId
      KeyName:      !Ref KeyName
      SubnetId:     !Ref PublicSubnetA
      SecurityGroupIds: [!Ref EC2SG]
      Tags:
        - Key: Name
          Value: cfn-lab-ec2
        - Key: Environment
          Value: lab
        - Key: Project
          Value: cfn-lab

Outputs:
  # ─────────── VPC ───────────
  VpcId:
    Description: New VPC ID
    Value: !Ref VPC

  # ─────────── Subnets ───────
  PublicSubnetIds:
    Description: Comma-separated list of public subnet IDs (1a & 1c)
    Value: !Join [",", [!Ref PublicSubnetA, !Ref PublicSubnetC]]

  PrivateSubnetIds:
    Description: Comma-separated list of private subnet IDs (1a & 1c)
    Value: !Join [",", [!Ref PrivateSubnetA, !Ref PrivateSubnetC]]

  RdsSubnetIds:
    Description: Comma-separated list of RDS-dedicated subnet IDs (1a, 1c, 1d)
    Value: !Join [",", [!Ref RdsSubnetA, !Ref RdsSubnetC, !Ref RdsSubnetD]]

  RdsSubnetGroupName:
    Description: DB subnet group used for RDS
    Value: !Ref RdsSubnetGroup

  # ─────────── EC2 ───────────
  InstanceId:
    Description: EC2 instance ID
    Value: !Ref EC2Instance

  InstancePublicIp:
    Description: Public IP of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp

